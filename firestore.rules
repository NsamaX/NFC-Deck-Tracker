rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Collections
      match /collections/{collectionId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;

        match /cards/{cardId} {
          allow read, write: if request.auth != null && request.auth.uid == userId;
        }
      }

      // Decks
      match /decks/{deckId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;

        match /cards/{collectionId} {
          allow read, write: if request.auth != null && request.auth.uid == userId;
        }
      }

      // Records
      match /records/{recordId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Publicly shared rooms for gameplay
    match /rooms/{roomId} {
      allow create: if request.auth != null
                    && request.resource.data.playerIds.size() <= 2
                    && request.resource.data.playerIds.hasAny([request.auth.uid]);

      allow read, update, delete: if request.auth != null && request.auth.uid in resource.data.playerIds;

      match /records/{recordId} {
        allow read, write: if request.auth != null && request.auth.uid in resource.data.playerIds;
      }

      match /cards/{cardId} {
        allow read, write: if request.auth != null && request.auth.uid in resource.data.playerIds;
      }
    }
  }
}
